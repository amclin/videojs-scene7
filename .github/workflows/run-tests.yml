# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Run Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['12', '14', '15']
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        videojs-version: [5, 6, 7]
    env:
      VJS: ${{ matrix.videojs-version }}
      DISPLAY: 99.0

    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: NPM install
      run: npm ci
    - name: Include VideoJS ${{ matrix.videojs-version }}
    # Check if the current version is equal to the major version for the environment matrix
    # - run: 'export IS_INSTALLED="$(npm list video.js | grep "video.js@$VJS")"'
    # Install the target version for the test matrix (skipping if already matched)
    # - run: |
    #     if [ -z "$IS_INSTALLED" ]; then
    #       echo "INSTALLING video.js@>=$VJS.0.0-RC.0 <$(($VJS+1)).0.0";
    #       npm i "video.js@>=$VJS.0.0-RC.0 <\$(($VJS+1)).0.0";
    #     else \
    #       echo "video.js@$VJS ALREADY INSTALLED";
    #     fi
    # Install the latest version of VideoJS for the target major version range in the build matrix
      run: npm install "video.js@>=${{ matrix.videojs-version }}.0.0 <$((${{ matrix.videojs-version}}+1)).0.0"
    - name: Build
      run: npm run build --if-present
    - name: Test
      uses: GabrielBB/xvfb-action@v1 # Framebuffer needed so that Chrome and Firefox will run non-headless
      with:
        run: npm test
  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
